/*************************************************************
  BASE STYLES
  Values are set in the css block of the App.svelte component.
  CSS in Svelte components are scoped, so it's tricky to change
  values on the body and html tags from inside the Svelte app.
  Using CSS props helps workaround this, as Svelte *can* set 
  new values to the global scope with 
  :global(html) { --prop-name: value; },
  :global(body) { --prop-name: value; }
 *************************************************************/
body {
  background: var(--body-background);
  color: var(--body-font-col);
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--body-font-size);

  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* *****************************************
 * ****              RESET              ****
 * **** css reset via zellwk on github  ****
 * *****************************************/

/*******************
 Box Sizing
 *******************/
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/****************************
 Generic Margins and Paddings
 ****************************/
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
p,
pre,
blockquote,
figure,
figcaption,
hr,
dl,
dd {
  margin: 0;
  padding: 0;
}

/*******************
 Lists
 *******************/
ul {
  list-style: none;
}

/*******************
 Forms and buttons
 *******************/
input,
textarea,
select,
button {
  color: inherit;
  font: inherit;
  letter-spacing: inherit;
}

/* I usually expand input and textarea to full-width */
input[type='text'],
textarea {
  width: 100%;
}

/* More friendly border */
input,
textarea,
button {
  border: 1px solid gray;
}

/* Some defaults for one-liner buttons */
button {
  padding: 0.75em 1em;
  line-height: inherit;
  border-radius: 0;
  background-color: transparent;
}

button * {
  pointer-events: none;
}

/***********************************
 Easy responsive for media elements
 ***********************************/
img,
svg,
iframe,
video,
object,
embed {
  display: block;
  max-width: 100%;
}

/*******************
 Useful table styles
 *******************/
table {
  table-layout: fixed;
  width: 100%;
}

/*******************
 The hidden attribute
 *******************/
[hidden] {
  opacity: 0;
  visibility: hidden;
}

/*******************
 Noscript
 *******************/
noscript {
  display: block;
  margin-bottom: 1em;
  margin-top: 1em;
}

/*******************
 Tabindex
 *******************/
[tabindex='-1'] {
  outline: none !important;
}

/*******************
 Remove animations and transitions
 @see https://hankchizljaw.com/wrote/a-modern-css-reset/
 *******************/
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/*******************
* Screen-reader only class to hide content visually
* Solution by Joe Watkins.
* @see https://zellwk.com/blog/hide-content-accessibly/
*******************/
.sr-only {
  position: absolute;
  width: 1px;
  height: auto;
  margin: 0;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
  white-space: nowrap;
}
